{"ast":null,"code":"var _jsxFileName = \"/Users/hebermoranbriones/Desktop/Escuela/Final Proyect/chatbot/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatbotLogo from './Images/ChatBotLogo.png';\nimport OracleLogo from './Images/OracleLogo.png';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth, firestore } from './Database Connection/firebase'; // Importa auth y firestore\nimport { addDoc, collection, getDocs, query, where, doc, getDoc } from 'firebase/firestore'; // Importa las funciones necesarias desde Firestore\nimport HomeScreen from './Screens/homeScreen';\nimport HomeScreenManager from './Screens/homeScreenManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isManager, setIsManager] = useState(false);\n  useEffect(() => {\n    // Verificar el estado del usuario al cargar la página\n    const unsubscribe = auth.onAuthStateChanged(async user => {\n      if (user) {\n        // Usuario autenticado, realizar acciones necesarias\n        setLoggedIn(true);\n        await checkIsManager(user.uid);\n      } else {\n        // No hay usuario autenticado, limpiar datos\n        setLoggedIn(false);\n        setIsManager(false);\n      }\n    });\n\n    // Limpiar efecto cuando el componente se desmonta\n    return () => unsubscribe();\n  }, []);\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Verificar si el usuario ya está registrado\n      const userExists = await checkUserExists(user.email);\n      if (!userExists) {\n        // Crear un nuevo documento de usuario en Firestore\n        await createUserDocument(user.email);\n      }\n\n      // Verificar si el usuario es un manager\n      await checkIsManager(user.uid);\n\n      // Establecer la bandera de inicio de sesión como verdadera\n      setLoggedIn(true);\n    } catch (error) {\n      setError('Correo o contraseña incorrectos');\n      console.error('Error al iniciar sesión:', error.message);\n    }\n  };\n  const checkUserExists = async email => {\n    try {\n      // Consultar la colección de usuarios en Firestore para verificar si el usuario ya está registrado\n      const q = query(collection(firestore, 'usuarios'), where('correo', '==', email));\n      const querySnapshot = await getDocs(q);\n      return !querySnapshot.empty;\n    } catch (error) {\n      console.error('Error al verificar si el usuario ya está registrado:', error.message);\n      return false;\n    }\n  };\n  const createUserDocument = async email => {\n    try {\n      // Añadir un documento de usuario con el correo electrónico del usuario a la colección \"usuarios\" en Firestore\n      await addDoc(collection(firestore, 'usuarios'), {\n        correo: email\n      });\n    } catch (error) {\n      console.error('Error al crear documento de usuario en Firestore:', error.message);\n    }\n  };\n  const checkIsManager = async uid => {\n    try {\n      // Obtener el documento del usuario recién creado\n      const docRef = doc(firestore, 'usuarios', uid);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        // Verificar si el usuario es un manager\n        const userData = docSnap.data();\n        setIsManager(userData.isManager || false); // Actualizar el estado si es un gerente, o false si no está definido\n      }\n    } catch (error) {\n      console.error('Error al verificar si el usuario es un manager:', error.message);\n    }\n  };\n  if (loggedIn) {\n    console.log(\"isManager:\", isManager);\n    return isManager ? /*#__PURE__*/_jsxDEV(HomeScreenManager, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 48\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: ChatbotLogo,\n        className: \"App-logo\",\n        alt: \"Chatbot Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"App-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Inicio de Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Correo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: handleEmailChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: handlePasswordChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: OracleLogo,\n        className: \"Oracle-logo\",\n        alt: \"Oracle Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m99phrkZZIrQ/gnxul465ThxNzI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatbotLogo","OracleLogo","signInWithEmailAndPassword","auth","firestore","addDoc","collection","getDocs","query","where","doc","getDoc","HomeScreen","HomeScreenManager","jsxDEV","_jsxDEV","App","_s","email","setEmail","password","setPassword","error","setError","loggedIn","setLoggedIn","isManager","setIsManager","unsubscribe","onAuthStateChanged","user","checkIsManager","uid","handleEmailChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","userCredential","userExists","checkUserExists","createUserDocument","console","message","q","querySnapshot","empty","correo","docRef","docSnap","exists","userData","data","log","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","onSubmit","style","color","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/hebermoranbriones/Desktop/Escuela/Final Proyect/chatbot/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatbotLogo from './Images/ChatBotLogo.png';\nimport OracleLogo from './Images/OracleLogo.png';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth, firestore } from './Database Connection/firebase'; // Importa auth y firestore\nimport { addDoc, collection, getDocs, query, where, doc, getDoc } from 'firebase/firestore'; // Importa las funciones necesarias desde Firestore\nimport HomeScreen from './Screens/homeScreen';\nimport HomeScreenManager from './Screens/homeScreenManager';\n\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isManager, setIsManager] = useState(false);\n\n  useEffect(() => {\n    // Verificar el estado del usuario al cargar la página\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        // Usuario autenticado, realizar acciones necesarias\n        setLoggedIn(true);\n        await checkIsManager(user.uid);\n      } else {\n        // No hay usuario autenticado, limpiar datos\n        setLoggedIn(false);\n        setIsManager(false);\n      }\n    });\n\n    // Limpiar efecto cuando el componente se desmonta\n    return () => unsubscribe();\n  }, []);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      \n      // Verificar si el usuario ya está registrado\n      const userExists = await checkUserExists(user.email);\n      \n      if (!userExists) {\n        // Crear un nuevo documento de usuario en Firestore\n        await createUserDocument(user.email);\n      }\n\n      // Verificar si el usuario es un manager\n      await checkIsManager(user.uid);\n\n      // Establecer la bandera de inicio de sesión como verdadera\n      setLoggedIn(true);\n    } catch (error) {\n      setError('Correo o contraseña incorrectos');\n      console.error('Error al iniciar sesión:', error.message);\n    }\n  };\n\n  const checkUserExists = async (email) => {\n    try {\n      // Consultar la colección de usuarios en Firestore para verificar si el usuario ya está registrado\n      const q = query(collection(firestore, 'usuarios'), where('correo', '==', email));\n      const querySnapshot = await getDocs(q);\n      return !querySnapshot.empty;\n    } catch (error) {\n      console.error('Error al verificar si el usuario ya está registrado:', error.message);\n      return false;\n    }\n  };\n\n  const createUserDocument = async (email) => {\n    try {\n      // Añadir un documento de usuario con el correo electrónico del usuario a la colección \"usuarios\" en Firestore\n      await addDoc(collection(firestore, 'usuarios'), {\n        correo: email\n      });\n    } catch (error) {\n      console.error('Error al crear documento de usuario en Firestore:', error.message);\n    }\n  };\n\n  const checkIsManager = async (uid) => {\n    try {\n      // Obtener el documento del usuario recién creado\n      const docRef = doc(firestore, 'usuarios', uid);\n      const docSnap = await getDoc(docRef);\n      \n      if (docSnap.exists()) {\n        // Verificar si el usuario es un manager\n        const userData = docSnap.data();\n        setIsManager(userData.isManager || false); // Actualizar el estado si es un gerente, o false si no está definido\n      }\n    } catch (error) {\n      console.error('Error al verificar si el usuario es un manager:', error.message);\n    }\n  };\n\n  if (loggedIn) {\n    console.log(\"isManager:\", isManager);\n    return isManager ? <HomeScreenManager /> : <HomeScreen />;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={ChatbotLogo} className=\"App-logo\" alt=\"Chatbot Logo\" />\n        <form onSubmit={handleSubmit} className=\"App-form\">\n          <h2>Inicio de Sesión</h2>\n          {error && <p style={{ color: 'red' }}>{error}</p>}\n          <label>\n            Correo:\n            <input type=\"email\" value={email} onChange={handleEmailChange} required />\n          </label>\n          <label>\n            Contraseña:\n            <input type=\"password\" value={password} onChange={handlePasswordChange} required />\n          </label>\n          <button type=\"submit\">Iniciar Sesión</button>\n        </form>\n        <img src={OracleLogo} className=\"Oracle-logo\" alt=\"Oracle Logo\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}